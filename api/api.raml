#%RAML 1.0
title: edukolab-api
version: 1.0.0
securitySchemes:
  Bearer:
      description: |
        This scheme validates request by using a token
      type: x-custom
      displayName: Bearer
      describedBy:
        headers:
          Authorization:
            description: |
              The header should contain a valid token
            type: string
baseUri: http://localhost:8008
mediaType: application/json
types:
    Address:
        description: A user's address
        type: string
        example: "123 Fulton Avenue"
    Age:
        description: A valid age
        type: integer
        minimum: 18
        format: int8
        example: 19
    Application:
        description: A teacher's application for a job
        type: object
        properties:
          id: ID
          jobID: ID
          owner: Teacher
    CareerInterest:
        description: Schools and subjects a teacher will like to teach at and teach respectively in a new job
        type: object
        properties:
            schoolNames?: SchoolName[]
            subjects?: SubjectTaught[]
    CurrentEmployments:
        description: Teacher's current employment
        type: Employment[]
    Disability:
        description: A user's disability
        type: string
        example: "blidnesss"
    Email:
        description: A user's email address
        type: string
        pattern: ^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$
        example: "john.doe@example.com"
    Employment:
        description: A confirmed employment made possible by EduKolab
        type: object
        properties:
          id: ID
          isAccepted:
              description: Informs if the teacher has accepted the employment
              type: boolean
              example: false
          response: OfferResponse
    Error:
        type: Response
        description: Error request response
        properties:
            data: nil
            error:
                type: boolean
                example: true
    ExistsError: Error
    FamilyName:
        description: A user's family name
        type: string
        example: "Doe"
    File:
        description: "A file either .jpg .jpeg .png or .pdf"
        type: file
        fileTypes: ['image/jpg', 'image/jpeg', 'image/png', 'application/pdf']
        maxLength: 16777216
    FieldError:
        description: A request error caused by an incorrect or incomplete or required field
        type: Error
        properties:
            message:
                example: "Field error"
    FirstName:
        description: A user's firstName
        type: string
        example: "John"
    FullName:
        description: A user's fullName
        type: object
        properties:
          familyName: FamilyName
          firstName: FirstName
    Gender:
        description: A gender type
        type: string
        enum: ["MALE", "FEMALE"]
        example: "MALE"
    Grade:
        description: A grade(class) according to the Universal Basic Education system
        type: string
        enum: ["G1", "G2", "G3", "G4", "G5", "G6", "G7", "G8", "G9", "G10", "G11", "G12"]
        example: "G1"
    Guardian:
        description: "A student's guradian with userType: UG"
        type: User
        properties:
            age: Age
            gender?: Gender
            id: ID
            role: Role
            wards: Ward[]
    HighestCompletedEducationLevel:
        description: Object for teacher's highest completed educational level
        type: object
        properties:
            certificate?: File
            name: HighestCompletedEducationLevelName
    HighestCompletedEducationLevelName:
        type: string
        description: The name of a UT(teacher)'s highest completed education level
        enum: ["FSLC", "WASSCE","OND","HND","Undergraduate","Masters", "PHD"]
        example: "Undergraduate"
    ID:
        description: Generated by jsonwebtoken
        type: string
        example: 5eddf0c1c75e4e0017390203
    IsInNeedOfCareerChange:
        description: Informs if teacher is in need of career change
        type: boolean
        example: true
    IsStudentsMixed:
        description: Informs if students are mixed
        type: boolean
        example: true
    IsTeachersMixed:
        description: Informs if teachers are mixed
        type: boolean
        example: true
    IsVerified:
        description: Informs if verified
        type: boolean
        example: true
    Job:
        description: "A job posted by an employer: UEG(Guardian) or UESR(School representative)"
        type: TeacherJobFilters
        properties:
            id: ID
            isMixed:
                description: Informs if students on the job are mixed or not
                type: boolean
                example: false

            details:
                description: Other job details not covered by the other fields
                type: string
                example: This job is very tasking
            owner: Guardian | SchoolRepresentative
            studentNumber:
                description: Number of student to be taught
                type: integer
                minimum: 1
                example: 5
    Offer:
        description: An offer for employment sent to a teacher from a UG or UESR
        type: object
        properties:
          applicationID?: ID
          duties: Subject[] | Ward[]
          id: ID
          message:
            description: Custom message
            type: string
            example: "We need you"
          onwer: Guardian | SchoolRepresentative
          teacher: Teacher
    OfferResponse:
        description: "Teacher's response to an offer"
        type: object
        properties:
            id: ID
            message:
                description: Custom message
                type: string
                example: "I'm free to start today"
            offerID: ID
            owner: Teacher
    NotFound:
        description: "Error request response for NotFound"
        type: Error
    Password:
        description: "A password must have at least 1 uppercase and lowercase letter and a number"
        type: string
        pattern: ^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$
        minLength: 6
        example: "Fiber1"
    Phone:
        description: A Nigerian phone number
        type: string
        pattern: ^[234]\d{12}$
        example: "2348056437809"
    Response:
        description: A request's response
        type: object
        properties:
            data:
                description: A request's response data
                type: nil | object | array
            error:
                description: A request's response error status
                type: boolean
            message:
                description: A request's response message
                type: string
    Role:
        type: string
        description: "A UEG(Guardian's) role to a student or UESR(School Representative)'s role at a school"
        enum: ["Parent", "Relation", "Family Friend", "Principal", "Vice-Principal", "HeadMaster", "HeadMistress", "HeadTeacher"]
        example: "Parent"
    School:
        description: A school
        type: object
        properties:
            id: ID
            isStudentsMixed: IsStudentsMixed
            isTeachersMixed: IsTeachersMixed
            isVerified: IsVerified
            schoolAddress: Address
            schoolEmail: Email
            schoolName: SchoolName
            schoolPhone: Phone
            schoolState: State
            schoolWebsite:
                description: Link tot the school's website
                type: string
                pattern: ^((https?|ftp|smtp):\/\/)?(www.)?[a-z0-9]+\.[a-z]+(\/[a-zA-Z0-9#]+\/?)*$
                example: "nebs.com"

            subjects: Subject
    SchoolName:
        description: A school's name
        type: string
        example: "New Estate Baptist School"
    SchoolRepresentative:
        description: A school's representative
        type: User
        properties:
          address: Address
          id: ID
          role: Role
          school: School[]
          state: State
    State:
        description: A Nigerian state
        type: string
        enum: ["Abia","Adamawa","Akwa Ibom","Anambra","Bauchi","Bayelsa","Benue","Borno","Cross River","Delta","Ebonyi","Edo","Ekiti","Enugu","FCT - Abuja","Gombe","Imo","Jigawa","Kaduna","Kano","Katsina","Kebbi","Kogi","Kwara","Lagos","Nasarawa","Niger","Ogun","Ondo","Osun","Oyo","Plateau","Rivers","Sokoto","Taraba","Yobe","Zamfara"]
        example: "Lagos"
    Subject:
        description: Information about the duties of a job by a school
        type: object
        properties:
            gradeList: Grade[]
            id: ID
            isStudentsMixed: IsStudentsMixed
            school: ID
            subjectName: SubjectName
            subjectStudentDisabilities: Disability[]
            subjectStudentNumber:
                description: Number of students to be taught
                type: integer
                example: 50
            subjectTeacher:
                description: An already existing teacher for the subject
                type: string
                example: "Ms. Jane Doe"
    SubjectName:
        type: string
        description: A subject either in primary or secondary curriculum
        example: "Physics"
    SubjectTaught:
        description: Object for a subject taught by a teacher and gradeLevels the tecaher teaches the subject to
        type: object
        properties:
            gradeLevels: Grade[]
            subjectName: SubjectName
    Success:
        description: Success request Response
        type: Response
    Teacher:
        description: Teacher details sent during a job application
        type: [User, TeacherJobFilters]
        properties:
            id: ID
            teacherResume: File
    TeacherJobFilters:
        description: Filters applied in fetching jobs for teachers
        type: object
        properties:
            teacherAge: Age
            teacherCareerInterest?: CareerInterest
            teacherDisabilitiesExperiencedWith?: Disability[]
            teacherGender?: Gender
            teacherHighestCompletedEducationLevelName: HighestCompletedEducationLevelName
            teacherIsEmployed?:
                description: Informs if teacher is currently employed
                type: boolean
                example: false
            teacherIsInNeedOfCareerChange: IsInNeedOfCareerChange
            teacherStudentCapacity?:
                description: Number of students teacher can manage
                type: integer
                example: 50
            teacherSubjectsTaught?: SubjectTaught[]
    User:
        description: A user object showing with the required fields
        type: FullName
        properties:
            email: Email
            phone: Phone
            userType: UserType
    UserType:
        description: User Types on EduKolab
        type: string
        enum: ["UT","UEG","UEGW","UESR"]
        example: "UT"
    Ward:
        description: A UG(Guardian)'s ward(child)
        type: FullName
        properties:
            age: Age
            disabilities: Disability[]
            gender: Gender
            gradeLevel: Grade
            id: ID
            isVerified:
                description: Informs if this ward has been confirmed
                type: boolean
                example: true
            school: School
            subjectList: SubjectName[]
            teachers: User[]
            userType: UserType
/application:
    description: Job applications
    delete:
        description: Delete all job applications
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Applications deleted successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Application[]
                            message:
                                example: "Applications deleted successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No applications found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No applications found"
    get:
        description: Get all job applications
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Job applications fetched successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Application[]
                            message:
                                example: "Job applications fetched successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No application found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No application found"
    post:
        description: Create a job application
        securedBy:
        - Bearer
        body:
            application/json: Application
        responses:
            201:
                description: |
                    Application created successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Application
                            message:
                                example: "Application created successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            409:
                description: |
                    Application already exists
                body:
                    application/json:
                        type: ExistsError
                        properties:
                            message:
                                example: "Application already exists"
            404:
                description: |
                    Job not found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "Job not found"

    /{applicationID}:
        description: A specific job application
        uriParameters:
            applicationID: ID
        delete:
            description: Delete a specific job application
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Application deleted successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Application
                                message:
                                    example: "Application deleted successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Application not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Application not found"
        get:
            description: Get a specific job application
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Job application fetched successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Application
                                message:
                                    example: "Job application fetched successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Application not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Application not found"
        put:
            description: Update a specific job application
            securedBy:
            - Bearer
            body:
                application/json: Application
            responses:
                200:
                    description: |
                        Application updated successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Application
                                message:
                                    example: "Application updated successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Application not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Application not found"
/auth:
    description: Authentication
    post:
        description: Authenticate a user
        body:
            application/json:
                type: object
                properties:
                    email: Email
                    password: Password
        responses:
            200:
                description: |
                    User authenticated successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: ID
                            message:
                                example: "User authenticated successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    User not found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "User not found"
/employment:
    description: All employments
    delete:
        description: Delete all employments
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Employments deleted successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Employment[]
                            message:
                                example: "Employments deleted successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No Employment found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No Employment found"
    get:
        description: Get all employments
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Employments fetched successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Employment[]
                            message:
                                example: "Employments fetched successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No employment found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No employment found"
    post:
        description: Create an employment
        securedBy:
        - Bearer
        body:
            application/json: Employment
        responses:
            201:
                description: |
                    Employment created successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Employment
                            message:
                                example: "Employment created successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            409:
                description: |
                    Employment already exists
                body:
                    application/json:
                        type: ExistsError
                        properties:
                            message:
                                example: "Employment already exists"
            404:
                description: |
                    Response not found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "Response not found"

    /{employmentID}:
        description: A specific employment
        uriParameters:
            employmentID: ID
        delete:
            description: Delete a specific employment
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Employment deleted successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Employment
                                message:
                                    example: "Employment deleted successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Employment not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Employment not found"


        get:
            description: Get a specific employment
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Employment fetched successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Employment
                                message:
                                    example: "Employment fetched successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Employment not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Employment not found"
        put:
            description: Update a specific employment
            securedBy:
            - Bearer
            body:
                application/json: Employment
            responses:
                200:
                    description: |
                        Employment updated successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Employment
                                message:
                                    example: "Employment updated successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Employment not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Employment not found"
/job:
    description: All jobs
    delete:
        description: Delete all jobs
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Jobs deleted successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Job[]
                            message:
                                example: "Jobs deleted successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No jobs found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No jobs found"
    get:
        description: Get all jobs
        securedBy:
        - Bearer
        queryParameters:
            teacherJobFilters?: TeacherJobFilters
        responses:
            200:
                description: |
                    Jobs fetched successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Job[]
                            message:
                                example: "Jobs fetched successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No jobs found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No jobs found"

    post:
        description: Create a job
        securedBy:
        - Bearer
        body:
            application/json: Job
        responses:
            201:
                description: |
                    Job created successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Job
                            message:
                                example: "Job created successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            409:
                description: |
                    Job already exists
                body:
                    application/json:
                        type: ExistsError
                        properties:
                            message:
                                example: "Job already exists"
    /{jobID}:
        description: A specific job
        uriParameters:
            jobID: ID
        delete:
            description: Delete a specific job
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Job deleted successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Job
                                message:
                                    example: "Job deleted successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Job not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Job not found"
        get:
            description: Get a specific job
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Job fetched successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Job
                                message:
                                    example: "Job fetched successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Job not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Job not found"
        put:
            description: Update a specific job
            securedBy:
            - Bearer
            body:
                application/json: Job
            responses:
                200:
                    description: |
                        Job updated successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Job
                                message:
                                    example: "Job updated successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Job not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Job not found"
/offer:
    description: All offers
    delete:
        description: Delete all offers
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Offers deleted successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Offer[]
                            message:
                                example: "Offers deleted successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No offers found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No offers found"
    get:
        description: Get all offers
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Offers fetched successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Offer[]
                            message:
                                example: "Offers fetched successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No offer found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No offer found"
    post:
        description: Create an offer
        securedBy:
        - Bearer
        body:
            application/json: Offer
        responses:
            201:
                description: |
                    Offer created successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: Offer
                            message:
                                example: "Offer created successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            409:
                description: |
                    Offer already exists
                body:
                    application/json:
                        type: ExistsError
                        properties:
                            message:
                                example: "Offer already exists"
    /{offerID}:
        description: A specific offer
        uriParameters:
            offerID: ID
        delete:
            description: Delete a specific offer
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Offer deleted successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Offer
                                message:
                                    example: "Offer deleted successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Offer not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Offer not found"
        get:
            description: Get a specific offer
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Offer fetched successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Offer
                                message:
                                    example: "Offer fetched successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Offer not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Offer not found"
        put:
            description: Update a specific offer
            securedBy:
            - Bearer
            body:
                application/json: Offer
            responses:
                200:
                    description: |
                        Offer updated successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: Offer
                                message:
                                    example: "Offer updated successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Offer not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Offer not found"
/response:
    description: All offer responses
    delete:
        description: Delete all offer responses
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Responses deleted successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: OfferResponse[]
                            message:
                                example: "Responses deleted successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No responses found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No responses found"
    get:
        description: Get all offer responses
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Responses fetched successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: OfferResponse[]
                            message:
                                example: "Responses fetched successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No responses found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No responses found"
    post:
        description: Create an offer response
        securedBy:
        - Bearer
        body:
            application/json: OfferResponse
        responses:
            201:
                description: |
                    Response created successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: OfferResponse
                            message:
                                example: "Response created successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            409:
                description: |
                        Response already exists
                body:
                    application/json:
                        type: ExistsError
                        properties:
                            message:
                                example: "Response already exists"
            404:
                description: |
                    Offer not found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "Offer not found"


    /{responseID}:
        description: A specific offer response
        uriParameters:
            responseID: ID
        delete:
            description: Delete a specific offer response
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Response deleted successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: OfferResponse
                                message:
                                    example: "Response deleted successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Response not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Response not found"
        get:
            description: Get a specific offer response
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        Response fetched successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: OfferResponse
                                message:
                                    example: "Response fetched successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Response not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Response not found"
        put:
            description: Update a specific offer response
            securedBy:
            - Bearer
            body:
                application/json: OfferResponse
            responses:
                200:
                    description: |
                        Response updated successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: OfferResponse
                                message:
                                    example: "Response updated successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        Response not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "Response not found"

/user:
    description: All users
    delete:
        description: Delete all users
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Users deleted successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: User[]
                            message:
                                example: "Users deleted successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No users found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No users found"
    get:
        description: Get all users
        securedBy:
        - Bearer
        responses:
            200:
                description: |
                    Users fetched successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: User[]
                            message:
                                example: "Users fetched successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            404:
                description: |
                    No users found
                body:
                    application/json:
                        type: NotFound
                        properties:
                            message:
                                example: "No users found"
    post:
        description: Create a user
        body:
            application/json:
                type: User
                properties:
                    confirmPassword:
                        type: Password
                    password:
                        type: Password
        responses:
            201:
                description: |
                    User created successfully
                body:
                    application/json:
                        type: Success
                        properties:
                            data: nil
                            message:
                                example: "User created successfully"
            400:
                description: |
                    Missen or incorrect field
                body:
                    application/json: FieldError
            409:
                description: |
                        User already exists
                body:
                    application/json:
                        type: ExistsError
                        properties:
                            message:
                                example: "User already exists"
    /{userID}:
        description: A specific user
        uriParameters:
            userID: ID
        delete:
            description: Delete a specific user
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        User deleted successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: User
                                message:
                                    example: "User deleted successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        User not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "User not found"
        get:
            description: Get a specific user
            securedBy:
            - Bearer
            responses:
                200:
                    description: |
                        User fetched successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: User
                                message:
                                    example: "User fetched successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        User not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "User not found"
        put:
            description: Update a specific user
            securedBy:
            - Bearer
            body:
                application/json:
                    type: User
                    properties:
                        address?: Address
                        age?: Age
                        careerInterests?: CareerInterest[]
                        currentEmployments?: CurrentEmployments
                        disabilities?: Disability[]
                        disabilitiesExperiencedWith?: Disability[]
                        gender?: Gender
                        gradeLevel?: Grade
                        highestCompletedEducationLevel?: HighestCompletedEducationLevel
                        isEmployed?: boolean
                        isInNeedOfCareerChange?: IsInNeedOfCareerChange
                        isVerified:
                            description: Informs if this ward has been confirmed
                            type: boolean
                            example: true
                        resume?: File
                        role?: Role
                        schools?: School[]
                        state?: State
                        subjectList?: SubjectName[]
                        teachers?: Teacher[]
                        wards?: Ward[]
            responses:
                200:
                    description: |
                        User updated successfully
                    body:
                        application/json:
                            type: Success
                            properties:
                                data: User
                                message:
                                    example: "User updated successfully"
                400:
                    description: |
                        Missen or incorrect field
                    body:
                        application/json: FieldError
                404:
                    description: |
                        User not found
                    body:
                        application/json:
                            type: NotFound
                            properties:
                                message:
                                    example: "User not found"
#TODO: Routes
# 1. Confirm teacher
# 2. Confim HighestCompletedEducationLevel
# 3. Consider adding years of experience to teacher model
# 4. Confirm school owners
# 5. Confirm guardian
# 6. Confirm UESRs
